// <auto-generated />
using Final_Project.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace FinalProject.Migrations
{
    [DbContext(typeof(DragonContext))]
    [Migration("20221208185454_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "7.0.0");

            modelBuilder.Entity("Final_Project.Models.Allegiance", b =>
                {
                    b.Property<int>("AllegianceId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("AllianceName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("AllyStatus")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("WarStatus")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("AllegianceId");

                    b.ToTable("Allegiances");
                });

            modelBuilder.Entity("Final_Project.Models.Country", b =>
                {
                    b.Property<int>("CountryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("CountryName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("CountryNeighbor")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Export")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Import")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("CountryId");

                    b.ToTable("Countrys");
                });

            modelBuilder.Entity("Final_Project.Models.Dragon", b =>
                {
                    b.Property<int>("DragonId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("AllegianceId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("CountryId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("DragonAffinity")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("DragonBounty")
                        .HasColumnType("INTEGER");

                    b.Property<string>("DragonEC")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("DragonName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("DragonRace")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("DragonId");

                    b.HasIndex("AllegianceId");

                    b.HasIndex("CountryId");

                    b.ToTable("Dragons");
                });

            modelBuilder.Entity("Final_Project.Models.Dragon", b =>
                {
                    b.HasOne("Final_Project.Models.Allegiance", "Allegiance")
                        .WithMany("Dragons")
                        .HasForeignKey("AllegianceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Final_Project.Models.Country", "Country")
                        .WithMany("Dragons")
                        .HasForeignKey("CountryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Allegiance");

                    b.Navigation("Country");
                });

            modelBuilder.Entity("Final_Project.Models.Allegiance", b =>
                {
                    b.Navigation("Dragons");
                });

            modelBuilder.Entity("Final_Project.Models.Country", b =>
                {
                    b.Navigation("Dragons");
                });
#pragma warning restore 612, 618
        }
    }
}
